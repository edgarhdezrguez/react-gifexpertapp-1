{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","alert","type","value","onChange","target","name","id","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","catch","console","log","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"iNAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,KAEdO,MAAM,wBAIV,SACI,uBACIC,KAAK,OACLC,MAAOV,EACPW,SAnBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,QAmBfG,KAAK,WACLC,GAAG,iB,+BCzBNC,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHZ,GAAIY,EAAIZ,GACRa,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAVtB,kBAebM,GAfa,4CAAH,sDCUNM,EAVK,SAAC,GAAqB,EAApBhB,GAAqB,IAAjBa,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAE7B,OACI,sBAAKa,UAAU,0CAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZjB,mBAAS,CAC/BwB,KAAM,GACNY,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAatC,OANAC,qBAAU,WACNvB,EAASC,GACRuB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CAACd,KAAMiB,EAAML,SAAQ,OAC5CM,MAAMC,QAAQC,OAChB,CAAC3B,IAEGoB,EDV0BQ,CAAa5B,GAAtCmB,EAF2B,EAE3BA,QAAcP,EAFa,EAElBL,KAGjB,OACI,qCACI,qBAAIQ,UAAU,oCAAd,cAAmEf,EAAnE,MAAuDA,GACtDmB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEKH,EAAOH,KAAI,SAACoB,GAAD,OAAY,cAAC,EAAD,eAAgCA,GAAdA,EAAM/B,aEoBjDgC,EA/BM,WAAM,MAGa/C,mBAAS,CAAC,gBAHvB,mBAGhBQ,EAHgB,KAGJT,EAHI,KAWvB,OACI,qCACI,8CAGA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBACA,6BACKS,EAAWkB,KAAI,SAACT,GAAD,OAChB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCvBzB+B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f39633e3.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n    // const [categories, setCategories] = catgs;\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        \n        if (inputValue.trim().length > 0){\n            setCategories(categories =>  [inputValue, ...categories]);\n            setInputValue('');\n        } else \n            alert(\"Value dont be empty\");\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\" \n                value={inputValue}\n                onChange={handleInputChange}\n                name=\"addSerie\" \n                id=\"serie2Add\"/>\n            {/* <button onClick={handleAdd}> Add </button> */}\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","\n\nexport const getGifts = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=RhrdWDkVhRuEfqk5qMYFdF96fYYGiP2x`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    //console.log(gifs);\n    return gifs;\n};","import React from 'react'\n\nconst GifGridItem = ({id, title, url}) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn \">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n};\n\nexport default GifGridItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const { loading, data:images } = useFetchGifs(category);\n    //console.log( loading);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\" key={category}> {category} </h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\n            <div className=\"card-grid\">\n                \n                {images.map((image) => (<GifGridItem key={image.id} {...image}/>))}\n                \n            </div>\n        </>    \n    )\n}\n\nGifGrid.propTypes = {\n    category: PropTypes.string.isRequired\n    \n}","import { useEffect, useState } from \"react\"\nimport { getGifts } from \"../helpers/getGifts\";\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifts(category)\n        .then( imgs => setState({data: imgs, loading:false}))\n        .catch(console.log );\n    }, [category]);\n\n    return state; // { data: [], loading: true}\n\n};","\nimport React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n// const categories = ['One punch', 'Boku no Hero Academy', 'Dragon ball'];\n    const [categories, setCategories] = useState(['Dragon ball']);\n    \n    // const handleAdd = () => {\n    //     const newSerie = document.querySelector(\"#serie2Add\").value;\n    //     // setCategories([...categories, newSerie]);\n    //     setCategories(categs => [...categs, newSerie]);\n    // };\n    \n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            {/* <input type=\"text\" name=\"addSerie\" id=\"serie2Add\"/>\n            <button onClick={handleAdd}> Add </button> */}\n            <AddCategory setCategories={setCategories}/>\n\n            <hr/>\n            <ol>\n                {categories.map((category) => (\n                <GifGrid \n                    key={category} \n                    category={category}/>\n                ))}\n            </ol>\n        </>\n    );\n\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp  from './GifExpertApp'\nReactDOM.render(\n    // <App />,\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}